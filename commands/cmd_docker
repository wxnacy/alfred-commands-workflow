# 在交互模式下进入容器，并进入 bash 环境
docker exec -it <continer-name> /bin/bash
# 重启容器
docker container restart <continer-name>
# 重启所有服务
docker restart `docker ps -a | awk '{print $1}'`
# 从最后 10 行开始实时查看日志
docker logs -f --tail 10 <continer-name>
# 从最后 10 行开始实时查看日志并过滤信息
docker logs -f --tail 10 <continer-name> 2>&1 | grep <pattern>
# 登录
docker login

# 查看当前运行的进程列表
docker ps
# 查看所有进程列表
docker ps -a
# 删除所有停止运作的容器
docker ps -a | grep Exited | awk '{print $1}' | xargs docker rm

# 在当前目录创建镜像
docker build -t <image-name> .
# 在当前目录创建镜像，不使用缓存
docker build --no-cache -t <image-name> .
# 查看镜像列表
docker image ls
# 查看版本
docker --version
# 分别查看 client 和 server 的版本
docker version
# 查看 docker 详情
docker info
# 重新创建容器，并在后台运行
docker-compose up --force-recreate -d <name>
# 重启 Docker
systemctl restart docker
# 打标签
docker tag <exist-image>[:tag-name] <new-image>[:tag-name]
# 拉取镜像
docker pull <image-name>[:tag-name]
# 推送镜像
docker push <image-name>[:tag-name]

# 查看镜像列表
docker image ls
# 删除所有名称为空的镜像
docker image ls | grep none | awk '{print $3}' | xargs docker rmi
